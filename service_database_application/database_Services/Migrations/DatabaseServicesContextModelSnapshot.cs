// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using database_Services.Data;

namespace database_Services.Migrations
{
    [DbContext(typeof(DatabaseServicesContext))]
    partial class DatabaseServicesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain_Model_App.Authentication", b =>
                {
                    b.Property<int>("AuthenticationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthenticationID");

                    b.ToTable("Authentication");
                });

            modelBuilder.Entity("Domain_Model_App.Medic", b =>
                {
                    b.Property<int>("MedicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthenticationDataAuthenticationID")
                        .HasColumnType("int");

                    b.Property<int?>("MedicDataUserID")
                        .HasColumnType("int");

                    b.Property<string>("Rotation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.HasKey("MedicID");

                    b.HasIndex("AuthenticationDataAuthenticationID");

                    b.HasIndex("MedicDataUserID");

                    b.ToTable("Medic");
                });

            modelBuilder.Entity("Domain_Model_App.Pacient", b =>
                {
                    b.Property<int>("PacientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Bloodgroup")
                        .HasColumnType("int");

                    b.Property<int?>("PacientInfoUserID")
                        .HasColumnType("int");

                    b.Property<int?>("Rh")
                        .HasColumnType("int");

                    b.Property<int?>("Sex")
                        .HasColumnType("int");

                    b.HasKey("PacientID");

                    b.HasIndex("PacientInfoUserID");

                    b.ToTable("Pacient");
                });

            modelBuilder.Entity("Domain_Model_App.Procedure", b =>
                {
                    b.Property<int>("ProcedureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Asa")
                        .HasColumnType("int");

                    b.Property<int>("MedicID")
                        .HasColumnType("int");

                    b.Property<int?>("PatientPacientID")
                        .HasColumnType("int");

                    b.Property<string>("PatientStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcedureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("VideoRecord")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ProcedureID");

                    b.HasIndex("MedicID");

                    b.HasIndex("PatientPacientID");

                    b.ToTable("Procedure");
                });

            modelBuilder.Entity("Domain_Model_App.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Domain_Model_App.Medic", b =>
                {
                    b.HasOne("Domain_Model_App.Authentication", "AuthenticationData")
                        .WithMany()
                        .HasForeignKey("AuthenticationDataAuthenticationID");

                    b.HasOne("Domain_Model_App.User", "MedicData")
                        .WithMany()
                        .HasForeignKey("MedicDataUserID");

                    b.Navigation("AuthenticationData");

                    b.Navigation("MedicData");
                });

            modelBuilder.Entity("Domain_Model_App.Pacient", b =>
                {
                    b.HasOne("Domain_Model_App.User", "PacientInfo")
                        .WithMany()
                        .HasForeignKey("PacientInfoUserID");

                    b.Navigation("PacientInfo");
                });

            modelBuilder.Entity("Domain_Model_App.Procedure", b =>
                {
                    b.HasOne("Domain_Model_App.Medic", null)
                        .WithMany("Procedures")
                        .HasForeignKey("MedicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain_Model_App.Pacient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientPacientID");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Domain_Model_App.Medic", b =>
                {
                    b.Navigation("Procedures");
                });
#pragma warning restore 612, 618
        }
    }
}
